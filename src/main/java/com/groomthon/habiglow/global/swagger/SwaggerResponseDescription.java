package com.groomthon.habiglow.global.swagger;

import java.util.Set;

import com.groomthon.habiglow.global.response.ErrorCode;

public enum SwaggerResponseDescription {

	MEMBER_ERROR(Set.of(
		ErrorCode.MEMBER_NOT_FOUND,
		ErrorCode.DUPLICATE_EMAIL
	)),

	MEMBER_JOIN_ERROR(Set.of(
		ErrorCode.DUPLICATE_EMAIL,
		ErrorCode.PARAMETER_VALIDATION_ERROR,
		ErrorCode.INVALID_INPUT_VALUE
	)),

	AUTH_ERROR(Set.of(
		ErrorCode.INVALID_TOKEN,
		ErrorCode.REFRESH_TOKEN_NOT_FOUND,
		ErrorCode.LOGIN_FAIL
	)),

	ROUTINE_ERROR(Set.of(
		ErrorCode.ROUTINE_NOT_FOUND,
		ErrorCode.ROUTINE_GROWTH_MODE_DISABLED,
		ErrorCode.ROUTINE_INVALID_TITLE,
		ErrorCode.ROUTINE_INVALID_CATEGORY,
		ErrorCode.ROUTINE_INVALID_GROWTH_SETTINGS,
		ErrorCode.ROUTINE_CANNOT_INCREASE_TARGET,
		ErrorCode.MEMBER_NOT_FOUND,
		ErrorCode.INVALID_INPUT_VALUE,
		ErrorCode.PARAMETER_VALIDATION_ERROR
	)),

	DAILY_RECORD_ERROR(Set.of(
		ErrorCode.DAILY_RECORD_FUTURE_DATE_NOT_ALLOWED,
		ErrorCode.DAILY_RECORD_INVALID_PERFORMANCE_LEVEL,
		ErrorCode.DAILY_RECORD_INVALID_EMOTION_TYPE,
		ErrorCode.DAILY_RECORD_INVALID_ROUTINES,
		ErrorCode.ROUTINE_NOT_FOUND,
		ErrorCode.MEMBER_NOT_FOUND,
		ErrorCode.INVALID_INPUT_VALUE,
		ErrorCode.PARAMETER_VALIDATION_ERROR
	)),

	COMMON_ERROR(Set.of(
		ErrorCode.INTERNAL_SERVER_ERROR,
		ErrorCode.INVALID_INPUT_VALUE
	)),

	ALL_ERROR(Set.of(
		ErrorCode.MEMBER_NOT_FOUND,
		ErrorCode.DUPLICATE_EMAIL,
		ErrorCode.INVALID_TOKEN,
		ErrorCode.REFRESH_TOKEN_NOT_FOUND,
		ErrorCode.LOGIN_FAIL,
		ErrorCode.ROUTINE_NOT_FOUND,
		ErrorCode.ROUTINE_GROWTH_MODE_DISABLED,
		ErrorCode.ROUTINE_INVALID_TITLE,
		ErrorCode.ROUTINE_INVALID_CATEGORY,
		ErrorCode.ROUTINE_INVALID_GROWTH_SETTINGS,
		ErrorCode.ROUTINE_CANNOT_INCREASE_TARGET,
		ErrorCode.DAILY_RECORD_FUTURE_DATE_NOT_ALLOWED,
		ErrorCode.DAILY_RECORD_INVALID_PERFORMANCE_LEVEL,
		ErrorCode.DAILY_RECORD_INVALID_EMOTION_TYPE,
		ErrorCode.DAILY_RECORD_INVALID_ROUTINES,
		ErrorCode.INTERNAL_SERVER_ERROR,
		ErrorCode.INVALID_INPUT_VALUE,
		ErrorCode.PARAMETER_VALIDATION_ERROR
	)),

	// AI 관련 에러
	AI_ANALYSIS_ERROR(Set.of(
			ErrorCode.INVALID_WEEK_START,
			ErrorCode.FUTURE_WEEK_NOT_ALLOWED,
			ErrorCode.NO_WEEKLY_DATA_FOUND,
			ErrorCode.INSUFFICIENT_DATA_FOR_ANALYSIS,
			ErrorCode.AI_ANALYSIS_FAILED,
			ErrorCode.AI_RESPONSE_PARSE_FAILED
	));


	private final Set<ErrorCode> errorCodeList;

	SwaggerResponseDescription(Set<ErrorCode> errorCodeList) {
		this.errorCodeList = errorCodeList;
	}

	public Set<ErrorCode> getErrorCodeList() {
		return errorCodeList;
	}
}